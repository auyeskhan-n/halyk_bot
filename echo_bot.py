# -*- coding: utf-8 -*-
import telebot
import os
import mysql.connector
import math
import urllib.request
from bs4 import BeautifulSoup
from telebot import types

bot = telebot.TeleBot("")

text_messages = {
    'start':
        u'–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!\n\n'
        u'–Ø –Ω–µ–æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –±–æ—Ç –æ—Ç –•–∞–ª—ã–∫ –ë–∞–Ω–∫–∞. \n'
        u'–ù–∞–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /help –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥.',

    'about':
        u'–ê–û ¬´–ù–∞—Ä–æ–¥–Ω—ã–π –±–∞–Ω–∫ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–∞¬ª ‚Äî –∫—Ä—É–ø–Ω–µ–π—à–∏–π —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏–π –±–∞–Ω–∫ –†–µ—Å–ø—É–±–ª–∏–∫–∏ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω, '
        u'—É—Å–ø–µ—à–Ω–æ —Ä–∞–±–æ—Ç–∞—é—â–∏–π –Ω–∞ –±–ª–∞–≥–æ —Å–≤–æ–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ —É–∂–µ –±–æ–ª–µ–µ 90 –ª–µ—Ç, –æ–¥–Ω–∞ –∏–∑ —Å–∞–º—ã—Ö –Ω–∞–¥–µ–∂–Ω—ã—Ö –∏ –¥–∏–≤–µ—Ä—Å–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö '
        u'—Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö —Å—Ç—Ä—É–∫—Ç—É—Ä –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–∞.\n\n'
        u'–Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–π –∞–¥—Ä–µ—Å: \n050008, –≥.–ê–ª–º–∞—Ç—ã, –ø—Ä. –ê–±–∞—è 109 –í\n\n'
        u'–ö–æ–Ω—Ç–∞–∫—Ç-—Ü–µ–Ω—Ç—Ä: \n—Ç–µ–ª–µ—Ñ–æ–Ω: (727) 259-07-77 \n–ø–æ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—É –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π: 8 8000 8000 59\n\n'
        u'–§–∞–∫—Å-—Å–µ—Ä–≤–µ—Ä: (727) 259-02-71 \n–¢–µ–ª–µ—Ç–∞–π–ø: 251866 KPOKET\n–¢–µ–ª–µ–∫—Å: 251531 HSBK KZ\n–ö–æ–¥ SWIFT: HSBKKZKX\n–ö–æ–¥ Reuters: Dealing SVKZ\nE-mail: halykbank@halykbank.kz ',

    'otdeleniya':
    	u'‚Äî –ê–ª–º–∞—Ç–∏–Ω—Å–∫–∏–π –û–±–ª–∞—Å—Ç–Ω–æ–π –§–∏–ª–∏–∞–ª ‚Ññ139900: \n'
    	u'	–≥. –ê–ª–º–∞—Ç—ã, —É–ª. –†–æ–∑—ã–±–∞–∫–∏–µ–≤–∞, 101\n\n'
    	u'‚Äî –†–∞—Å—á—ë—Ç–Ω–æ-–∫–∞—Å—Å–æ–≤–æ–µ –æ—Ç–¥–µ–ª–µ–Ω–∏–µ 131506\n'
    	u'	–≥. –ê–ª–º–∞—Ç—ã, –ø–ª. –†–µ—Å–ø—É–±–ª–∏–∫–∏, 4\n\n'
    	u'‚Äî –†–∞—Å—á—ë—Ç–Ω–æ-–∫–∞—Å—Å–æ–≤–æ–µ –æ—Ç–¥–µ–ª–µ–Ω–∏–µ 131499\n'
    	u'	–≥. –ê–ª–º–∞—Ç—ã, –º–∫—Ä. –ê–∫—Å–∞–π-4, –¥.100\n\n'
    	u'‚Äî –†–∞—Å—á—ë—Ç–Ω–æ-–∫–∞—Å—Å–æ–≤–æ–µ –æ—Ç–¥–µ–ª–µ–Ω–∏–µ 131403\n'
    	u'	–≥. –ê–ª–º–∞—Ç—ã, –ø—Ä. –†–∞–π—ã–º–±–µ–∫–∞, 383\n\n'
    	u'‚Äî –†–∞—Å—á—ë—Ç–Ω–æ-–∫–∞—Å—Å–æ–≤–æ–µ –æ—Ç–¥–µ–ª–µ–Ω–∏–µ 131405\n'
    	u'	–≥. –ê–ª–º–∞—Ç—ã, –º–∫—Ä.4, –¥.10–∞',
    'bankomaty':
    	u'‚Äî –ë–∞–Ω–∫–æ–º–∞—Ç 13268: \n'
    	u'	–ø—Ä. –ñ–∏–±–µ–∫ –ñ–æ–ª—ã 54\n\n'
    	u'‚Äî –ë–∞–Ω–∫–æ–º–∞—Ç 00013008: \n'
    	u'	–≥. –ê–ª–º–∞—Ç—ã, –º–∫—Ä. 4, 10–ê (–ø—Ä. –ê–±–∞—è, —É–≥. –ø—Ä. –ê–ª—Ç—ã–Ω—Å–∞—Ä–∏–Ω–∞)\n\n'
    	u'‚Äî –ë–∞–Ω–∫–æ–º–∞—Ç 00013001: \n'
    	u'	–≥. –ê–ª–º–∞—Ç—ã, —É–ª. –ü–∞–ø–∞–Ω–∏–Ω–∞, 220, —É–≥. —É–ª. –°–≤–µ—Ä–¥–ª–æ–≤–∞\n\n'
    	u'‚Äî –ë–∞–Ω–∫–æ–º–∞—Ç 00013002: \n'
    	u'	–≥. –ê–ª–º–∞—Ç—ã, —É–ª. –ü–∞–Ω—Ñ–∏–ª–æ–≤–∞, —É–≥.—É–ª. –ö–∞—Ä–∞—Å–∞–π –±–∞—Ç—ã—Ä–∞\n\n'
    	u'‚Äî –ë–∞–Ω–∫–æ–º–∞—Ç 00013003: \n'
    	u'	–≥. –ê–ª–º–∞—Ç—ã, –ø—Ä. –ê–±–∞—è, 109–í, —É–≥. —É–ª. –ê—É—ç–∑–æ–≤–∞, –¢–¶ "–ì–ª–æ–±—É—Å", 09:00 - 01:00',
    'block':
    	u'–í —Å–ª—É—á–∞–µ —É—Ç–µ—Ä–∏ –∏–ª–∏ –∫—Ä–∞–∂–∏ –∫–∞—Ä—Ç–æ—á–∫–∏, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Å—É—â–µ—Å—Ç–≤–∏—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –¥–µ–π—Å—Ç–≤–∏—è: \n'
    	u'–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Å—Ä–æ—á–Ω–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É, –ø–æ–∑–≤–æ–Ω–∏–≤ –≤  –ö–æ–Ω—Ç–∞–∫—Ç —Ü–µ–Ω—Ç—Ä, –ª–∏–±–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ '
    	u'"–ò–ò–ù, –ø–æ—Å–ª–µ–¥–Ω–∏–µ 4 —Ü–∏—Ñ—Ä—ã –∫–∞—Ä—Ç–æ—á–∫–∏".',
    'bonus':
    	u'üìç Halyk Bank Bonus Club üìç\n\n'
    	u'–≠–∫–æ–Ω–æ–º—å—Ç–µ –¥–æ 20% –ø—Ä–∏ –æ–ø–ª–∞—Ç–µ –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏ –•–∞–ª—ã–∫ –ë–∞–Ω–∫–∞ '
    	u'–≤ –º–∞–≥–∞–∑–∏–Ω–∞—Ö, –∫–∞—Ñ–µ –∏ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞—Ö, –∞–ø—Ç–µ–∫–∞—Ö, –∑–∞–ø—Ä–∞–≤–∫–∞—Ö –∏ –≤–æ –º–Ω–æ–≥–∏—Ö –¥—Ä—É–≥–∏—Ö —á–∞—Å—Ç–æ '
    	u'–ø–æ—Å–µ—â–∞–µ–º—ã—Ö –í–∞–º–∏ –∑–∞–≤–µ–¥–µ–Ω–∏—è—Ö, –≤—Ö–æ–¥—è—â–∏—Ö –≤ —Å–ø–∏—Å–æ–∫ –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤ –±–æ–Ω—É—Å–Ω–æ–≥–æ –∫–ª—É–±–∞ ¬´HALYK¬ª.\n\n'
    	u'1 –±–æ–Ω—É—Å = 1 —Ç–µ–Ω–≥–µ!\n\n'
    	u'–ö–∞–∫ –ø–æ–ª—É—á–∞—Ç—å –∏ —Ç—Ä–∞—Ç–∏—Ç—å –±–æ–Ω—É—Å—ã? \n –ü–æ–¥—Ä–æ–±–Ω–µ–µ –ø–æ —Å—Å—ã–ª–∫–µ: \nhttp://www.halykbank.kz/ru/bonus-club/about-club'
}

commands = {
			'start': '–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º',
            'help': '–ü–æ–∫–∞–∑–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã',
            'about': '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ù–∞—Ä–æ–¥–Ω–æ–º –ë–∞–Ω–∫–µ.',
            'menu': '–í—ã–∑–≤–∞—Ç—å –º–µ–Ω—é.'
}

emergency = {
			'101': '–ü–æ–∂–∞—Ä–Ω–∞—è —Å–ª—É–∂–±–∞',
			'102': '–ü–æ–ª–∏—Ü–∏—è',
			'103': '–°–∫–æ—Ä–∞—è –ø–æ–º–æ—â—å',
			'112': '–°–ª—É–∂–±–∞ —Å–ø–∞—Å–µ–Ω–∏—è'
}

deposits = {
	'–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π': 	u'–°–∞–º—ã–π –ø—Ä–æ—Å—Ç–æ–π –∏ –Ω–∞–¥–µ–∂–Ω—ã–π —Å–ø–æ—Å–æ–± –≤–ª–æ–∂–µ–Ω–∏—è —Å–≤–æ–±–æ–¥–Ω—ã—Ö –¥–µ–Ω–µ–≥.\n\n'
					u'1. –°—Ä–æ–∫ –≤–∫–ª–∞–¥–∞ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 1,3,6,9,12,18,24,30,36 –º–µ—Å—è—Ü–µ–≤.\n'
					u'2. –ö–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏—è: –µ–∂–µ–º–µ—Å—è—á–Ω–æ.\n'
					u'3. –í—ã–ø–ª–∞—Ç–∞ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏—è –ø–æ –≤–∫–ª–∞–¥—É –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –ø–æ –æ–∫–æ–Ω—á–∞–Ω–∏–∏ —Å—Ä–æ–∫–∞ –≤–∫–ª–∞–¥–∞. \n'
					u'4. –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –≤–∫–ª–∞–¥–∞ –Ω–µ –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω–∞.\n'
					u'5. –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —á–∞—Å—Ç–∏—á–Ω–æ–≥–æ –∏–∑—ä—è—Ç–∏—è –≤–∫–ª–∞–¥–∞ –Ω–µ –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω–∞.\n'
					u'6. –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –≤–∫–ª–∞–¥–∞: 15 000 —Ç–µ–Ω–≥–µ, –∏–ª–∏ 100 –¥–æ–ª–ª–∞—Ä–æ–≤ –°–®–ê –∏–ª–∏ 100 –µ–≤—Ä–æ.\n'
					u'7. –°—Ç–∞–≤–∫–∞ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏—è –æ—Å—Ç–∞–µ—Ç—Å—è –Ω–µ–∏–∑–º–µ–Ω–Ω–æ–π –≤ —Ç–µ—á–µ–Ω–∏–µ —Å—Ä–æ–∫–∞ –≤–∫–ª–∞–¥–∞, –µ—Å–ª–∏ –∏–Ω–æ–µ –Ω–µ –±—É–¥–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –¥–æ–≥–æ–≤–æ—Ä–æ–º –ë–∞–Ω–∫–æ–≤—Å–∫–æ–≥–æ –≤–∫–ª–∞–¥–∞, –ª–∏–±–æ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ–º –∫ –î–æ–≥–æ–≤–æ—Ä—É.',
	'–ü–µ–Ω—Å–∏–æ–Ω–Ω—ã–π': 	u'–í–∫–ª–∞–¥ –¥–ª—è –ø–µ–Ω—Å–∏–æ–Ω–µ—Ä–æ–≤ –∏ –ª–∏—Ü –ø—Ä–µ–¥–ø–µ–Ω—Å–∏–æ–Ω–Ω–æ–≥–æ –≤–æ–∑—Ä–∞—Å—Ç–∞.\n\n'
					u'1. –û—Å–æ–±—ã–µ —É—Å–ª–æ–≤–∏—è: –≤–∫–ª–∞–¥—á–∏–∫–∞–º–∏ –º–æ–≥—É—Ç –≤—ã—Å—Ç—É–ø–∏—Ç—å —Ñ–∏–∑–∏—á–µ—Å–∫–∏–µ –ª–∏—Ü–∞ –≤ –≤–æ–∑—Ä–∞—Å—Ç–µ —Å—Ç–∞—Ä—à–µ 50 –ª–µ—Ç, –ª–∏–±–æ –ª–∏—Ü–∞ –≤ –≤–æ–∑—Ä–∞—Å—Ç–µ –¥–æ 50 –ª–µ—Ç, –ø—Ä–µ–¥—ä—è–≤–∏–≤—à–∏–µ –ø–µ–Ω—Å–∏–æ–Ω–Ω—ã–µ —É–¥–æ—Å—Ç–æ–≤–µ—Ä–µ–Ω–∏—è.\n'
					u'2. –°—Ä–æ–∫ –≤–∫–ª–∞–¥–∞ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 6 –∏ 12 –º–µ—Å—è—Ü–µ–≤.\n'
					u'3. –°—Ç–∞–≤–∫–∞ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏—è –ø–æ –≤–∫–ª–∞–¥—É –æ—Å—Ç–∞–µ—Ç—Å—è –Ω–µ–∏–∑–º–µ–Ω–Ω–æ–π –≤ —Ç–µ—á–µ–Ω–∏–µ —Å—Ä–æ–∫–∞ –≤–∫–ª–∞–¥–∞.\n'
					u'4. –ö–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏—è –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏—è: –≤ –∫–æ–Ω—Ü–µ —Å—Ä–æ–∫–∞ –≤–∫–ª–∞–¥–∞. –ü–æ –∂–µ–ª–∞–Ω–∏—é –∫–ª–∏–µ–Ω—Ç–∞ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ –º–æ–∂–µ—Ç –≤—ã–ø–ª–∞—á–∏–≤–∞—Ç—å—Å—è –µ–∂–µ–º–µ—Å—è—á–Ω–æ –Ω–∞ —Ç–µ–∫—É—â–∏–π –∏–ª–∏ –∫–∞—Ä—Ç–æ—á–Ω—ã–π —Å—á–µ—Ç.\n'
					u'5. –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –≤–∫–ª–∞–¥–∞: –¥–æ–ø—É—Å–∫–∞–µ—Ç—Å—è –ø—Ä–∏ —É—Å–ª–æ–≤–∏–∏ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –≤–∑–Ω–æ—Å–∞ ‚Äì 500 —Ç–µ–Ω–≥–µ, –∏–ª–∏ 5 –¥–æ–ª–ª–∞—Ä–æ–≤ –°–®–ê, –∏–ª–∏ 5 –µ–≤—Ä–æ.\n'
					u'6. –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —á–∞—Å—Ç–∏—á–Ω–æ–≥–æ –∏–∑—ä—è—Ç–∏—è –≤–∫–ª–∞–¥–∞ –Ω–µ –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω–∞.\n'
					u'7. –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –≤–∫–ª–∞–¥–∞: 2 000 —Ç–µ–Ω–≥–µ, –∏–ª–∏ 20 –¥–æ–ª–ª–∞—Ä–æ–≤ –°–®–ê, –∏–ª–∏ 20 –µ–≤—Ä–æ.',
	'–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π':u'–£–¥–æ–±–Ω—ã–π —Å–ø–æ—Å–æ–± —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–±–µ—Ä–µ–∂–µ–Ω–∏—è–º–∏.  \n\n'
					u'1. –°—Ä–æ–∫ –≤–∫–ª–∞–¥–∞ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 9, 12, 36 –º–µ—Å—è—Ü–µ–≤.\n'
					u'2. –ö–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏—è: –µ–∂–µ–º–µ—Å—è—á–Ω–æ.\n'
					u'3. –í—ã–ø–ª–∞—Ç–∞ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏—è: –ø–æ –æ–∫–æ–Ω—á–∞–Ω–∏–∏ —Å—Ä–æ–∫–∞ –≤–∫–ª–∞–¥–∞.\n'
					u'4. –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –≤–∫–ª–∞–¥–∞: –¥–æ–ø—É—Å–∫–∞–µ—Ç—Å—è –ø—Ä–∏ —É—Å–ª–æ–≤–∏–∏ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –≤–∑–Ω–æ—Å–∞ ‚Äì 7 000 —Ç–µ–Ω–≥–µ, –∏–ª–∏ 50 –¥–æ–ª–ª–∞—Ä–æ–≤ –°–®–ê, –∏–ª–∏ 50 –µ–≤—Ä–æ.\n'
					u'5. –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —á–∞—Å—Ç–∏—á–Ω–æ–≥–æ –∏–∑—ä—è—Ç–∏—è –≤–∫–ª–∞–¥–∞: –¥–æ–ø—É—Å–∫–∞–µ—Ç—Å—è –ø—Ä–∏ —É—Å–ª–æ–≤–∏–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞ —Å–±–µ—Ä–µ–≥–∞—Ç–µ–ª—å–Ω–æ–º —Å—á–µ—Ç–µ –Ω–µ—Å–Ω–∏–∂–∞–µ–º–æ–≥–æ –æ—Å—Ç–∞—Ç–∫–∞ –≤ —Ä–∞–∑–º–µ—Ä–µ 75 000 —Ç–µ–Ω–≥–µ, –∏–ª–∏ 500 –¥–æ–ª–ª–∞—Ä–æ–≤ –°–®–ê, –∏–ª–∏ 500 –µ–≤—Ä–æ.\n'
					u'6. –°—Ç–∞–≤–∫–∞ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏—è –æ—Å—Ç–∞–µ—Ç—Å—è –Ω–µ–∏–∑–º–µ–Ω–Ω–æ–π –≤ —Ç–µ—á–µ–Ω–∏–µ —Å—Ä–æ–∫–∞ –≤–∫–ª–∞–¥–∞, –µ—Å–ª–∏ –∏–Ω–æ–µ –Ω–µ –±—É–¥–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –¥–æ–≥–æ–≤–æ—Ä–æ–º –±–∞–Ω–∫–æ–≤—Å–∫–æ–≥–æ –≤–∫–ª–∞–¥–∞, –ª–∏–±–æ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ–º –∫ –î–æ–≥–æ–≤–æ—Ä—É.\n'
					u'7. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ: –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –≤–∫–ª–∞–¥–∞ –ø—É—Ç–µ–º –æ—Å—É—â–µ—Å—Ç–≤–ª–µ–Ω–∏—è –ø–µ—Ä–µ–≤–æ–¥–∞ —Å–æ —Å–≤–æ–∏—Ö —Ç–µ–∫—É—â–∏—Ö —Å—á–µ—Ç–æ–≤ –±–µ–∑ –ø–æ—Å–µ—â–µ–Ω–∏—è –ë–∞–Ω–∫–∞ —á–µ—Ä–µ–∑ –ò–Ω—Ç–µ—Ä–Ω–µ—Ç –±–∞–Ω–∫–∏–Ω',
}
### currency parser ###################################################################################
def get_html(url):
	response = urllib.request.urlopen(url)
	return response.read()

def parse_currency(html):
    soup = BeautifulSoup(html, "html5lib") 
    table = soup.find('table',class_='rates-1 js-rates-1') 
    currency = [] 
    for row in table.find_all('tr')[1:]: 
        cols = row.find_all('td') 
        img= cols[2].img 
        currency.append({'currency': cols[0].text,'buy': cols[1].text.strip(),'sold':cols[2].text.strip()})           
    return currency

def parse_kotirovka(html):
    soup = BeautifulSoup(html, "html5lib") 
    table = soup.find_all('div',class_='indicators_vert__group') 
    data = [] 
    for row in table[1].find_all('a'): 
        cols = row.find_all('span')
        data.append({ 'data': cols[0].text.strip(),'value': cols[2].text.strip()})             
    return data

kot = parse_kotirovka(get_html('http://rbc.ru/'))
cur = parse_currency(get_html('http://halykbank.kz/'))
########################################################################################################
###################################location#############################################################
def find_longlat(message,location):
    lat = location.latitude
    long = location.longitude
    findNear(message,lat,long)    
def distFrom(lat1,long1,lat2,long2):
    earthRadius=6371.0
    dLat= math.radians(lat2-lat1)
    dLng= math.radians(long2-long1)
    sindLat = math.sin(dLat/2)
    sindLng = math.sin(dLng/2)

    a = math.pow(sindLat,2) +math.pow(sindLng,2) *math.cos(math.radians(lat1))*math.cos(math.radians(lat2))
    c = 2*math.atan2(math.sqrt(a),math.sqrt(1-a))
    dist = earthRadius*c

    return dist
def findNear(message,lat,long): 
    db = mysql.connector.connect(host="localhost",user="root",passwd="",db="telebot")  
    cur = db.cursor()
    cur.execute("SELECT * FROM bank_loc")
    rows = cur.fetchall()
    min_distance = 25
    temp = 0
    min_bank = -1
    for eachrow in rows:
        temp = distFrom(lat,long,eachrow[5],eachrow[4])
        if(temp<min_distance):
            min_distance=temp
            min_bank=eachrow[0]
    temp = distFrom(lat,long,rows[min_bank][5],rows[min_bank][4])
    bot.send_location(message.chat.id,rows[min_bank][5],rows[min_bank][4])
    db.close()
########################################################################################################
# => start
@bot.message_handler(commands=['start'])
def send_welcome(message):
	cid = message.chat.id 
	bot.send_message(cid, "–ó–¥—Ä–∞–≤—Å—Ç—É–π—Ç–µ Ruslan! –≠—Ç–æ –Ω–µ–æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –±–æ—Ç –æ—Ç –•–∞–ª—ã–∫ –ë–∞–Ω–∫!")
	markup = types.ReplyKeyboardMarkup()
	markup.add('üè¢ –û—Ç–¥–µ–ª–µ–Ω–∏—è', 'üèß –ë–∞–Ω–∫–æ–º–∞—Ç—ã')
	markup.add('üí± –í–∞–ª—é—Ç–∞', '–ö–æ—Ç–∏—Ä–æ–≤–∫–∏')
	markup.add('–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ', '–û –±–∞–Ω–∫–µ')
	bot.send_message(cid, '–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø–µ—Ä–∞—Ü–∏—é: ', reply_markup = markup)

# => menu
@bot.message_handler(func=lambda msg: msg.text == '–ú–µ–Ω—é')
def send_mmenu(message):
	cid = message.chat.id 
	markup = types.ReplyKeyboardMarkup()
	markup.add('üè¢ –û—Ç–¥–µ–ª–µ–Ω–∏—è', 'üèß –ë–∞–Ω–∫–æ–º–∞—Ç—ã')
	markup.add('üí± –í–∞–ª—é—Ç–∞', '–ö–æ—Ç–∏—Ä–æ–≤–∫–∏')
	markup.add('–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ', '–û –±–∞–Ω–∫–µ')
	bot.send_message(cid, '–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø–µ—Ä–∞—Ü–∏—é: ', reply_markup = markup)

# => about 
@bot.message_handler(commands=['about'])
@bot.message_handler(func=lambda msg: msg.text == '–û –±–∞–Ω–∫–µ')
def send_about(message):
	cid = message.chat.id
	bot.send_message(cid, text_messages['about'])

# => help
@bot.message_handler(commands=['help'])
@bot.message_handler(func=lambda msg: msg.text == '–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥')
def command_help(message):
    cid = message.chat.id
    help_text = "–î–æ—Å—Ç—É–ø–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã: \n"
    for key in commands:  
        help_text += "/" + key + ": "
        help_text += commands[key] + "\n"
    bot.send_message(cid, help_text)  

# => –æ—Ç–¥–µ–ª–µ–Ω–∏—è
@bot.message_handler(func=lambda msg: msg.text == 'üè¢ –û—Ç–¥–µ–ª–µ–Ω–∏—è')
def send_otdeleniya(message):
	cid = message.chat.id 
	markup = types.ReplyKeyboardMarkup()
	markup.add('üè¢ –°–ø–∏—Å–æ–∫ –æ—Ç–¥–µ–ª–µ–Ω–∏–∏', '–ù–∞–π—Ç–∏ –±–ª–∏–∂–∞–π—à–µ–µ –æ—Ç–¥–µ–ª–µ–Ω–∏–µ')
	bot.send_message(cid, '–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø–µ—Ä–∞—Ü–∏—é: ', reply_markup = markup)

# => —Å–ø–∏—Å–æ–∫ –æ—Ç–¥–µ–ª
@bot.message_handler(func=lambda msg: msg.text == 'üè¢ –°–ø–∏—Å–æ–∫ –æ—Ç–¥–µ–ª–µ–Ω–∏–∏')
def send_bankomaty(message):
	cid = message.chat.id 
	bot.send_message(cid, text_messages['otdeleniya'])

# => nearest 
@bot.message_handler(func=lambda msg: msg.text == '–ù–∞–π—Ç–∏ –±–ª–∏–∂–∞–π—à–µ–µ –æ—Ç–¥–µ–ª–µ–Ω–∏–µ')
def send_bankomaty(message):
	cid = message.chat.id 
	bot.send_message(cid, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –±–ª–∏–∂–∞–π—à–µ–µ –æ—Ç–¥–µ–ª–µ–Ω–∏–µ.")

# => location handler
@bot.message_handler(content_types=['location'])
def send_location(message):
	find_longlat(message,message.location)

# => –±–∞–Ω–∫–æ–º–∞—Ç—ã 
@bot.message_handler(func=lambda msg: msg.text == 'üèß –ë–∞–Ω–∫–æ–º–∞—Ç—ã')
def send_bankomaty(message):
	cid = message.chat.id 
	bot.send_message(cid, text_messages['bankomaty'])

# => –≤–∞–ª—é—Ç–∞
@bot.message_handler(func=lambda msg: msg.text == 'üí± –í–∞–ª—é—Ç–∞')
def send_currency(message):
	cid = message.chat.id 
	cur_text = "–ö—É—Ä—Å—ã –≤–∞–ª—é—Ç: \n–ü–æ–∫—É–ø–∫–∞: \n"
	for i in range (len(cur)):
	    cur_text += "1 " + cur[i]['currency'] + ": "
	    cur_text += cur[i]['buy'] + " KZT \n"
	cur_text += "\n–ü—Ä–æ–¥–∞–∂–∞: \n"
	for i in range (len(cur)):
	    cur_text += "1 " + cur[i]['currency'] + ": "
	    cur_text += cur[i]['sold'] + " KZT \n"
	bot.send_message(cid, cur_text)

# => –∫–æ—Ç–∏—Ä–æ–≤–∫–∏
@bot.message_handler(func=lambda msg: msg.text == '–ö–æ—Ç–∏—Ä–æ–≤–∫–∏')
def send_kotirovki(message):
	cid = message.chat.id 
	kotirovki = ""
	for i in range(len(kot)):
		kotirovki += kot[i]['data'] + ": "
		kotirovki += kot[i]['value'] + "\n"
	bot.send_message(cid, kotirovki)

# => moreMore
@bot.message_handler(func=lambda msg: msg.text == '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ')
def more(message):
	cid = message.chat.id 
	markup = types.ReplyKeyboardMarkup(row_width=2)
	markup.add('üÜò', 'üéÅ –ë–æ–Ω—É—Å–Ω—ã–π –∫–ª—É–±')
	markup.add('–†–∞–∑–Ω–æ–µ', '–£—Å–ª—É–≥–∏')
	markup.add('–ú–µ–Ω—é')
	bot.send_message(cid, '–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø–µ—Ä–∞—Ü–∏—é: ', reply_markup = markup)

# => –°–û–°
@bot.message_handler(func=lambda msg: msg.text == 'üÜò')
def more(message):
	cid = message.chat.id 
	markup = types.ReplyKeyboardMarkup(row_width=2)
	markup.add('–°–ø–∏—Å–æ–∫ —ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã—Ö —Å–ª—É–∂–±', '–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –∫–∞—Ä—Ç–æ—á–∫–∏', '–ú–µ–Ω—é')
	bot.send_message(cid, '–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø–µ—Ä–∞—Ü–∏—é: ', reply_markup = markup)

# => emergency
@bot.message_handler(func=lambda msg: msg.text == '–°–ø–∏—Å–æ–∫ —ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã—Ö —Å–ª—É–∂–±')
def send_emergency(message):
	cid = message.chat.id
	t = ""
	for i in emergency:
		t += i + ": "
		t += emergency[i] + "\n"
	bot.send_message(cid, t)

# => card block
@bot.message_handler(func=lambda msg: msg.text == '–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –∫–∞—Ä—Ç–æ—á–∫–∏')
def send_block(message):
	cid = message.chat.id 
	bot.send_message(cid, text_messages['block'])

# => card check
@bot.message_handler(regexp = "[x]\d{4}")
def send_block(message):
	cid = message.chat.id 
	bot.send_message(cid, "Blocked!")

# => bonus
@bot.message_handler(func=lambda msg: msg.text == 'üéÅ –ë–æ–Ω—É—Å–Ω—ã–π –∫–ª—É–±')
def send_bonus(message):
	cid = message.chat.id
	bot.send_message(cid, text_messages['bonus'])
	photo = open('bonus.jpg', 'rb') 
	bot.send_photo(cid, photo)

# => uslugi
@bot.message_handler(func=lambda msg: msg.text == '–£—Å–ª—É–≥–∏')
def send_uslugi(message):
	cid = message.chat.id
	markup = types.ReplyKeyboardMarkup(row_width=2)
	markup.add('–ß–∞—Å—Ç–Ω—ã–º –∫–ª–∏–µ–Ω—Ç–∞–º', '–ö–æ—Ä–ø. –∫–ª–∏–µ–Ω—Ç–∞–º', '–ú–µ–Ω—é')
	bot.send_message(cid, '–í—ã–±–µ—Ä–∏—Ç–µ —É—Å–ª—É–≥—É: ', reply_markup = markup)

# => chastnim
@bot.message_handler(func=lambda msg: msg.text == '–ß–∞—Å—Ç–Ω—ã–º –∫–ª–∏–µ–Ω—Ç–∞–º')
def send_uslugi(message):
	cid = message.chat.id
	markup = types.ReplyKeyboardMarkup(row_width=2)
	markup.add('–î–µ–ø–æ–∑–∏—Ç—ã', '–ö—Ä–µ–¥–∏—Ç—ã', '–ü–ª–∞—Ç–µ–∂–Ω—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏', '–ú–æ–±–∏–ª—å–Ω—ã–π –±–∞–Ω–∫–∏–Ω–≥', '–ú–µ–Ω—é')
	bot.send_message(cid, '–í—ã–±–µ—Ä–∏—Ç–µ —É—Å–ª—É–≥—É: ', reply_markup = markup)

# => deposit
@bot.message_handler(func=lambda msg: msg.text == '–î–µ–ø–æ–∑–∏—Ç—ã')
def send_deposit(message):
	cid = message.chat.id
	t = ""
	for i in deposits:
		t += i + ": "
		t += deposits[i] + "\n"
	bot.send_message(cid, t)
	
# => –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤
@bot.message_handler(func=lambda msg: msg.text == '–ö–æ—Ä–ø. –∫–ª–∏–µ–Ω—Ç–∞–º')
def send_uslugi(message):
	cid = message.chat.id
	markup = types.ReplyKeyboardMarkup(row_width=2)
	markup.add('–ü—Ä–æ–¥—É–∫—Ç—ã –∏ —É—Å–ª—É–≥–∏ –∫–∞–∑–Ω–∞—á–µ–π—Å—Ç–≤–∞', '–†–∞—Å—á—ë—Ç–Ω–æ-–∫–∞—Å—Å–æ–≤–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ', '–ö—Ä–µ–¥–∏—Ç–æ–≤–∞–Ω–∏–µ', '–ú–æ–±–∏–ª—å–Ω—ã–π –±–∞–Ω–∫–∏–Ω–≥', '–ú–µ–Ω—é')
	bot.send_message(cid, '–í—ã–±–µ—Ä–∏—Ç–µ —É—Å–ª—É–≥—É: ', reply_markup = markup)
bot.polling()
